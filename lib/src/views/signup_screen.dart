import 'dart:convert';import 'package:flutter/material.dart';import 'package:http/http.dart';class SignupScreen extends StatefulWidget {  const SignupScreen({super.key});  @override  State<SignupScreen> createState() => _SignupScreenState();}class _SignupScreenState extends State<SignupScreen> {  final _formKey = GlobalKey<FormState>();  TextEditingController email = TextEditingController();  TextEditingController name = TextEditingController();  TextEditingController birthDate = TextEditingController();  TextEditingController password = TextEditingController();  DateTime selectedDate = DateTime.now();  bool showPassword = false;  void signUp() async {    try {      if (mounted) {        Response response = await post(          Uri.parse('https://neartravel.teleferti.com/api/register'),          body: jsonEncode({            "method": "manual",            "email": email.text,            "name": name.text,            "birth_date": birthDate.text,            "password": password.text,          }),        );        if (mounted) {          if (response.statusCode == 201) {            Navigator.of(context).pop();          } else {            print(response.statusCode);            ScaffoldMessenger.of(context).showSnackBar(              const SnackBar(                content: Text("Something went wrong!"),                duration: Duration(seconds: 3),              ),            );          }        }      }    } catch (e) {      if (mounted) {        ScaffoldMessenger.of(context).showSnackBar(          const SnackBar(            content: Text("Something went wrong!"),            duration: Duration(seconds: 3),          ),        );      }    }  }  Future<void> _selectDate(BuildContext context) async {    final DateTime? picked = await showDatePicker(      context: context,      initialDate: selectedDate,      firstDate: DateTime(1900),      lastDate: DateTime.now(),    );    if (picked != null && picked != selectedDate) {      setState(() {        selectedDate = picked;        birthDate.text =            '${selectedDate.day}-${selectedDate.month}-${selectedDate.year}';      });    }  }  String? validateName(String? value) {    if (value == null || value.isEmpty) {      return 'Please enter your name';    }    return null;  }  String? validateEmail(String? value) {    if (value == null || value.isEmpty) {      return 'Please enter your email';    } else if (!RegExp(r'^[\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,7}$')        .hasMatch(value)) {      return 'Please enter a valid email';    }    return null;  }  String? validateBirthDate(String? value) {    if (value == null || value.isEmpty) {      return 'Please select your birth date';    }    return null;  }  String? validatePassword(String? value) {    if (value == null || value.isEmpty) {      return 'Please enter a password';    } else if (value.length < 8) {      return 'Password must be at least 878 characters long';    }    return null;  }  void _submitForm() {    if (_formKey.currentState?.validate() ?? false) {      signUp();    }  }  @override  Widget build(BuildContext context) {    Icon passwordIcon = const Icon(Icons.visibility_off_outlined);    double h = MediaQuery.of(context).size.height;    double w = MediaQuery.of(context).size.width;    return Scaffold(      body: SingleChildScrollView(        scrollDirection: Axis.vertical,        child: Padding(          padding: const EdgeInsets.symmetric(            horizontal: 20,            vertical: 10,          ),          child: Column(            crossAxisAlignment: CrossAxisAlignment.start,            children: [              Container(                margin: const EdgeInsets.only(top: 30),                height: h * 0.3734,                width: double.infinity,                decoration: const BoxDecoration(                  image: DecorationImage(                    image: AssetImage("Assets/signup_image_tour.png"),                  ),                ),              ),              const Text(                "Sign up",                style: TextStyle(                  fontWeight: FontWeight.w900,                  fontSize: 35,                ),              ),              const Text(                "Sign up to enjoy the feature of Revolution.",                style: TextStyle(                  color: Color.fromRGBO(150, 150, 150, 1),                  fontWeight: FontWeight.w400,                  fontSize: 14,                ),              ),              const SizedBox(                height: 30,              ),              Form(                key: _formKey,                child: Column(                  children: [                    TextFormField(                      textInputAction: TextInputAction.next,                      controller: name,                      decoration: const InputDecoration(                        labelText: "User Name",                        helperStyle: TextStyle(fontWeight: FontWeight.w100),                        border: OutlineInputBorder(                          borderRadius: BorderRadius.all(                            Radius.circular(10),                          ),                        ),                      ),                      validator: validateName,                    ),                    const SizedBox(height: 10),                    TextFormField(                      textInputAction: TextInputAction.next,                      controller: email,                      keyboardType: TextInputType.emailAddress,                      decoration: const InputDecoration(                        labelText: "Email",                        helperStyle: TextStyle(fontWeight: FontWeight.w100),                        border: OutlineInputBorder(                          borderRadius: BorderRadius.all(                            Radius.circular(10),                          ),                        ),                      ),                      validator: validateEmail,                    ),                    const SizedBox(height: 10),                    TextFormField(                      textInputAction: TextInputAction.next,                      controller: birthDate,                      readOnly: true,                      onTap: () => _selectDate(context),                      decoration: const InputDecoration(                        prefixIcon: Icon(Icons.calendar_today),                        labelText: "Birth Date",                        helperStyle: TextStyle(fontWeight: FontWeight.w100),                        border: OutlineInputBorder(                          borderRadius: BorderRadius.all(                            Radius.circular(10),                          ),                        ),                      ),                      validator: validateBirthDate,                    ),                    const SizedBox(height: 10),                    TextFormField(                      controller: password,                      obscureText: !showPassword, // Use a boolean variable to toggle visibility                      decoration: InputDecoration(                        suffixIcon: IconButton(                          onPressed: () {                            // Toggle visibility logic                            setState(() {                              showPassword = !showPassword;                              passwordIcon = showPassword                                  ? const Icon(Icons.visibility_outlined)                                  : const Icon(Icons.visibility_off_outlined);                            });                          },                          icon: passwordIcon,                        ),                        labelText: "Password",                        helperStyle: const TextStyle(fontWeight: FontWeight.w100),                        border: const OutlineInputBorder(                          borderRadius: BorderRadius.all(                            Radius.circular(10),                          ),                        ),                      ),                      validator: validatePassword,                    ),                    const SizedBox(height: 20),                    ElevatedButton(                      style: ButtonStyle(                        shape: MaterialStateProperty.all(                          const RoundedRectangleBorder(                            borderRadius: BorderRadius.all(                              Radius.circular(10),                            ),                          ),                        ),                        backgroundColor: MaterialStateProperty.all(                          const Color.fromRGBO(54, 122, 255, 1),                        ),                      ),                      onPressed: () {                        _submitForm();                      },                      child: Container(                        alignment: Alignment.center,                        height: h * 0.0585,                        width: w * 0.872,                        child: const Text(                          "Sign up",                          style: TextStyle(                            color: Colors.white,                            fontSize: 18,                            fontWeight: FontWeight.w800,                          ),                        ),                      ),                    ),                    const SizedBox(height: 10),                    Row(                      mainAxisAlignment: MainAxisAlignment.center,                      children: [                        SizedBox(                          width: w * 0.38,                          child: const Divider(),                        ),                        const Padding(                          padding: EdgeInsets.symmetric(horizontal: 10),                          child: Text(                            "or",                            style: TextStyle(                              fontWeight: FontWeight.w600,                              fontSize: 16,                              color: Color.fromRGBO(110, 110, 110, 1),                            ),                          ),                        ),                        SizedBox(                          width: w * 0.38,                          child: const Divider(),                        ),                      ],                    ),                    const SizedBox(height: 10),                    OutlinedButton(                      onPressed: () {                        // Google sign in logic                      },                      style: OutlinedButton.styleFrom(                        elevation: 100,                        side: const BorderSide(color: Colors.grey),                        shape: const RoundedRectangleBorder(                          borderRadius: BorderRadius.all(                            Radius.circular(10),                          ),                        ),                      ),                      child: SizedBox(                        height: h * 0.0585,                        width: w * 0.872,                        child: Row(                          mainAxisAlignment: MainAxisAlignment.center,                          children: [                            Container(                              height: 34,                              width: 34,                              decoration: const BoxDecoration(                                image: DecorationImage(                                  image: AssetImage(                                      "Assets/logo/Icon/googleLogo.png"),                                ),                              ),                            ),                            const SizedBox(                              width: 10,                            ),                            const Text(                              "Sign in with Google",                              style: TextStyle(                                fontSize: 18,                                fontWeight: FontWeight.w800,                                color: Colors.black,                              ),                            ),                          ],                        ),                      ),                    ),                    Padding(                      padding: const EdgeInsets.symmetric(vertical: 10),                      child: Row(                        mainAxisAlignment: MainAxisAlignment.center,                        children: [                          const Text(                            "Already have an account? ",                            style: TextStyle(                              color: Colors.grey,                            ),                          ),                          InkWell(                            onTap: () {                              Navigator.of(context).pop();                            },                            child: Text(                              "Sign in",                              style: Theme.of(context)                                  .textTheme                                  .bodyMedium                                  ?.copyWith(                                    decoration: TextDecoration.underline,                                    decorationColor:                                        const Color.fromRGBO(54, 122, 255, 1),                                    color:                                        const Color.fromRGBO(54, 122, 255, 1),                                    fontWeight: FontWeight.w500,                                  ),                            ),                          ),                        ],                      ),                    ),                  ],                ),              ),            ],          ),        ),      ),    );  }  @override  void dispose() {    if (mounted) {      name.clear();      email.clear();      birthDate.clear();      password.clear();    }    super.dispose();  }}